# -*- coding: utf-8 -*-
"""Eksplorasi Data Penjualan Buku di Amazon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/112YZ66aLmMIiCDoAzesnPGWPecJh9kUX
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
import matplotlib.pyplot as plt
from pandas import DataFrame
from IPython.display import display
# %matplotlib inline

#Inspeksi Data
books = pd.read_csv('S:/Learning/WORKSPACE/Eksplorasi-Data-Penjualan-Buku-Di-Amazon/bestsellers with categories.csv')
books.head()

#Analisis Data
books.info(verbose=True)

data = pd.read_csv('bestsellers with categories.csv')
df = DataFrame(data)

m = df['Reviews'].min()
C = df['User Rating'].mean()

def getWeightedRating(data, m=m, C=C):
    v = data['Reviews']
    R = data['User Rating']
    return (v/(v+m)*R) + (m/(v+m)*C)
    
    df['Weighted Rating'] = df.apply(lambda x: getWeightedRating(x), axis=1)

df.head()

sns.lineplot(data=df, x='Year', y='User Rating', ci=False)

#Analisa Genre
sns.countplot(x=df['Genre'])

fiction_count = df[df['Genre'] == 'Fiction'].groupby('Year').size()
nonfiction_count = df[df['Genre'] == 'Non Fiction'].groupby('Year').size()

count_total = pd.DataFrame([fiction_count, nonfiction_count]).transpose()
count_total.columns = ['Fiction', 'Non Fiction']

count_total.plot()

sns.barplot(data=df, x='Genre', y='User Rating')

sns.lineplot(data=df, x='Year', y='User Rating', hue='Genre', ci=False)

sns.lineplot(data=df, x='Year', y='Price')

sns.lineplot(data=df, x='Year', y='Price', hue='Genre')

df[df['Price'] == df['Price'].max()]

#Analisa Buku Terbaik
df_fiction = df[df['Genre'] == 'Fiction']
df_nonfiction = df[df['Genre'] == 'Non Fiction']

df[df['User Rating'] == df['User Rating'].max()]

best = []
for i in range(2009, 2020):
    temp = df[df['Year'] == i]
    best.append(temp[temp['User Rating'] == temp['User Rating'].max()])
pd.concat(best, axis=0)

df_nonfiction[df_nonfiction['User Rating'] == df_nonfiction['User Rating'].max()]

#Analisa Penulis Terbaik
df.groupby('Author').size().sort_values(ascending=False).head(10).plot.barh()